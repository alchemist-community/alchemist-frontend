{"version":3,"sources":["img/alembic.png","views/Footer/index.tsx","walletServices.js","Web3Context/index.tsx","contracts/getTokenBalances.ts","views/Widget/utils.ts","views/UserWallet/index.tsx","components/CancelButton.tsx","views/UserAddress/index.tsx","views/Header/index.tsx","contracts/utils.ts","contracts/aludelAbi.ts","contracts/crucibleFactoryAbi.ts","contracts/transmuterAbi.ts","contracts/alchemist.ts","views/Widget/TabContent/Panes/Mint/OperatePane.tsx","views/Widget/TabContent/Panes/Mint/index.tsx","contracts/getOwnedCrucibles.ts","contracts/unstakeAndClaim.ts","contracts/sendNFT.ts","contracts/withdraw.ts","views/Widget/TabContent/Panes/Operate/OperatePane.tsx","views/Widget/TabContent/Panes/Operate/index.tsx","views/Widget/index.tsx","views/Body/index.tsx","layouts/index.tsx","config/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","links","label","href","isExternal","Footer","as","py","flexDirection","justifyContent","alignItems","textAlign","fontWeight","fontSize","color","spacing","map","key","rel","_hover","borderBottomColor","borderBottomWidth","rpcUrl","dappId","Web3Context","React","createContext","web3","onboard","wallet","address","readyToTransact","a","provider","signer","monitorTx","undefined","Web3Provider","props","useState","setAddress","setProvider","setNetwork","setEtherBalance","setSigner","setWallet","setOnboard","notify","setNotify","updateWallet","ethersProvider","ethers","providers","getSigner","window","localStorage","setItem","name","walletSelect","walletCheck","ready","getState","hash","emitter","on","transaction","message","console","log","useEffect","subscriptions","network","balance","selectedAddress","Onboard","hideBranding","networkId","wallets","walletName","preferred","infuraKey","apiKey","appName","checkName","Notify","previouslySelectedWallet","getItem","Provider","value","children","getTokenBalances","getAddress","walletAddress","lp","Contract","IERC20","abi","balanceOf","token","formatUnits","alchemist","toMaxDecimalsRound","n","step","amount","Number","replace","factor","nRound","Math","round","isFinite","UserAddress","inProp","setInProp","useContext","tokenBalance","setTokenBalance","balances","userWalletBgColor","useColorModeValue","userWalletTextColor","CSSTransition","in","timeout","classNames","px","borderRadius","bg","shadow","boxShadow","CancelButton","fill","width","height","margin","handleClick","onClick","style","border","outline","Object","keys","length","className","cursor","pointerEvents","viewBox","xmlns","xmlnsXlink","d","buttonBgColor","background","variant","mr","substring","marginLeft","walletReset","Header","useColorMode","colorMode","toggleColorMode","isDarkMode","buttonHoverBgColor","src","LOGO","alt","display","icon","aria-label","signPermission","method","vault","owner","delegateAddress","tokenAddress","vaultNonce","chainId","getNetwork","domain","version","verifyingContract","types","type","delegate","nonce","_signTypedData","signedPermission","signPermitEIP2612","spenderAddress","deadline","nonces","values","spender","sig","splitSignature","v","r","s","inputs","internalType","components","stateMutability","anonymous","indexed","outputs","mintAndLock","rawAmount","args","aludel","crucibleFactory","transmuter","aludelAbi","getAludelData","stakingToken","IUniswapV2ERC20","crucibleFactoryAbi","transmuterAbi","parseUnits","decimals","salt","randomBytes","getBlock","timestamp","Error","getTemplate","predictDeterministicAddress","Crucible","crucible","permit","permission","mintCruciblePermitAndStake","tx","alert","OperatePane","handleInputChange","isConnected","lpBalance","setLpBalance","alertBgColor","mb","status","borderWidth","borderColor","role","placement","_focus","size","onChange","ev","target","toString","placeholder","zIndex","mt","h","then","isFullWidth","Operate","errorMsg","form","crucibleFactoryAddress","filter","filters","Transfer","queryFilter","crucibleEvents","crucibles","data","id","tokenId","toHexString","ownerOf","lockedBalance","getBalanceLocked","Promise","all","index","resolvedCrucibles","slice","find","c","unstakeAndClaim","crucibleAddress","recipient","getNonce","populateTransaction","populatedTx","sendTransaction","unstakeTx","transferERC20","withdrawTx","sendNFT","to","BigNumber","from","withdraw","ethereum","lock","sub","amount2Withdraw","setAmount2Withdraw","sendAddress","setSendAddress","modalIsOpen","setModalIsOpen","modalOperation","setModalOperation","selectedCrucible","setSelectedCrucible","lnBalance","tbtcBalance","linearFee","constantFee","nodeAddress","formValues","setCrucibles","getOwnedCrucibles","unstake","withdrawTokens","cruciblesCardBg","sendModal","isOpen","onClose","p","fonSize","isAttached","Widget","cardBgColor","tabsBgColor","isFitted","borderTopLeftRadius","borderTopRightRadius","_selected","overflowY","maxH","Body","Layout","bgColor","minHeight","backgroundColor","flexGrow","customTheme","extendTheme","config","initialColorMode","useSystemColorMode","colors","green","50","100","200","300","400","500","600","700","800","900","fonts","heading","body","Heading","baseStyle","Link","textDecoration","Alert","theme","radii","Input","Button","GlobalStyles","css","App","styles","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.96452eed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alembic.9eeae33d.png\";","import { Box, Flex, HStack, Link, Text } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nconst links = [\n  {\n    label: \"Code\",\n    href: \"https://github.com/alchemist-community/alchemist-frontend\",\n    isExternal: true,\n  },\n  {\n    label: \"Discord\",\n    href: \"http://discord.alchemist.wtf\",\n    isExternal: true,\n  },\n  {\n    label: \"FAQ\",\n    href: \"https://hackmd.io/@thegostep/BJ40PSVQd\",\n    isExternal: true,\n  },\n  {\n    label: \"Governance\",\n    href: \"https://cast.alchemist.wtf\",\n    isExternal: true,\n  },\n];\n\nconst Footer: React.FC = () => {\n  return (\n    <Box as=\"footer\">\n      <Flex\n        py={8}\n        flexDirection={[\"column\", \"column\", \"row\"]}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        as=\"footer\"\n      >\n        <Box textAlign={[\"center\", \"center\", \"initial\"]}>\n          <Text fontWeight=\"bold\" fontSize=\"md\">\n            alchemist.farm\n          </Text>\n          <Text fontSize=\"sm\" color=\"gray.500\">\n            Searching for the philosopher's stone\n          </Text>\n        </Box>\n        <Box>\n          <HStack spacing={4}>\n            {links.map(({ href, isExternal, label }) => (\n              <Link\n                py={1}\n                key={label}\n                href={href}\n                fontSize=\"sm\"\n                isExternal={isExternal}\n                rel=\"noopener noreferrer\"\n                _hover={{\n                  color: \"green.300\",\n                  borderBottomColor: \"green.300\",\n                  borderBottomWidth: 1,\n                }}\n              >\n                {label}\n              </Link>\n            ))}\n          </HStack>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import Notify from 'bnc-notify'\nimport Onboard from 'bnc-onboard'\n\nconst networkId = 1\nconst rpcUrl = \"https://mainnet.infura.io/v3/965c5ec028c84ffcb22c799eddba83a4\"\nconst dappId = 'ad454b00-3218-4403-95e9-22c3c7d3adc0'\nconst APP_NAME=\"Alchemist\"\n\nexport function initOnboard(subscriptions) {\n  return Onboard({\n    dappId,\n    hideBranding: false,\n    networkId,\n    // darkMode: true,\n    subscriptions,\n    walletSelect: {\n      wallets: [\n        { walletName: \"metamask\", preferred: true },\n        { walletName: \"trust\", preferred: true},\n        { walletName: \"authereum\", preferred: true  },\n        { walletName: \"coinbase\", preferred: true },\n        {\n          walletName: 'walletConnect',\n          infuraKey: 'd5e29c9b9a9d4116a7348113f57770a8',\n          preferred: true,\n        },\n        {\n          walletName: \"portis\",\n          label: 'Portis',\n          apiKey: 'e86e917b-b682-4a5c-bbc5-0f8c3b787562',\n          preferred: true,\n        },\n        { walletName: \"opera\" },\n        { walletName: \"torus\" },\n        { walletName: \"status\" },\n        { walletName: \"walletLink\", appName: APP_NAME, rpcUrl },\n        { walletName: \"frame\" },\n        { walletName: 'operaTouch' },\n        { walletName: 'imToken', rpcUrl },\n        { walletName: 'meetone' },\n        { walletName: 'mykey', rpcUrl },\n        { walletName: 'wallet.io', rpcUrl },\n        { walletName: 'huobiwallet', rpcUrl },\n        { walletName: 'hyperpay' },\n        { walletName: 'atoken' },\n        { walletName: 'liquality' },\n      ]\n    },\n    walletCheck: [\n      { checkName: 'derivationPath' },\n      { checkName: 'connect' },\n      { checkName: 'accounts' },\n      { checkName: 'network' }\n    ]\n  })\n}\n\nexport function initNotify() {\n  return Notify({\n    dappId,\n    networkId,\n  })\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport { Web3Provider as Web3ProviderType } from \"../ethereum\";\nimport { initNotify, initOnboard } from \"../walletServices\";\n\nconst Web3Context = React.createContext<{\n  web3: Web3ProviderType;\n  address: null | string;\n  onboard: any;\n  wallet: any;\n  readyToTransact: () => Promise<boolean>;\n  provider: any;\n  signer: any;\n  monitorTx: (hash: string) => Promise<void>;\n}>({\n  web3: null,\n  onboard: null,\n  wallet: null,\n  address: null,\n  readyToTransact: async () => false,\n  provider: null,\n  signer: null,\n  monitorTx: async () => undefined,\n});\n\nconst Web3Provider: React.FC = (props) => {\n  const [web3, setWeb3] = useState<Web3ProviderType>(null);\n  const [address, setAddress] = useState<string | null>(null);\n  const [provider, setProvider] = useState<any>(null);\n  const [network, setNetwork] = useState<any>(null);\n  const [etherBalance, setEtherBalance] = useState<any>(null);\n  const [signer, setSigner] = useState<any>();\n  const [wallet, setWallet] = useState<any>({});\n  const [onboard, setOnboard] = useState<ReturnType<typeof initOnboard>>(\n    null as any\n  );\n  const [notify, setNotify] = useState<any>(null);\n\n  const updateWallet = (wallet: any) => {\n    setWallet(wallet);\n    const ethersProvider = new ethers.providers.Web3Provider(wallet.provider);\n    setProvider(ethersProvider);\n    setSigner(ethersProvider.getSigner());\n    window.localStorage.setItem(\"selectedWallet\", wallet.name);\n  };\n\n  useEffect(() => {\n    const onboard = initOnboard({\n      address: setAddress,\n      network: setNetwork,\n      balance: setEtherBalance,\n      wallet: (wallet: any) => {\n        if (wallet?.provider?.selectedAddress) {\n          updateWallet(wallet);\n        } else {\n          setProvider(null);\n          setWallet({});\n        }\n      },\n    });\n\n    setOnboard(onboard);\n    setNotify(initNotify());\n  }, []);\n\n  useEffect(() => {\n    const previouslySelectedWallet = window.localStorage.getItem(\n      \"selectedWallet\"\n    );\n\n    if (previouslySelectedWallet && onboard) {\n      onboard.walletSelect(previouslySelectedWallet);\n    }\n  }, [onboard]);\n\n  async function readyToTransact(): Promise<boolean> {\n    if (!provider) {\n      const walletSelected = await onboard.walletSelect();\n      if (!walletSelected) return false;\n    }\n\n    const ready = await onboard.walletCheck();\n    if (ready && !provider) {\n      updateWallet(onboard.getState().wallet);\n    }\n    return ready;\n  }\n  async function monitorTx(hash: string) {\n    const { emitter } = notify.hash(hash);\n    interface Transaction {\n      hash: string;\n    }\n    emitter.on(\"txPool\", (transaction: Transaction) => {\n      return {\n        message: `Your transaction is pending, click <a href=\"https://mainnet.etherscan.io/tx/${transaction.hash}\" rel=\"noopener noreferrer\" target=\"_blank\">here</a> for more info.`,\n        // onclick: () =>\n        //   window.open(`https://mainnet.etherscan.io/tx/${transaction.hash}`)\n      };\n    });\n\n    emitter.on(\"txSent\", console.log);\n    emitter.on(\"txConfirmed\", console.log);\n    emitter.on(\"txSpeedUp\", console.log);\n    emitter.on(\"txCancel\", console.log);\n    emitter.on(\"txFailed\", console.log);\n  }\n\n  return (\n    <Web3Context.Provider\n      value={{\n        address,\n        onboard,\n        web3,\n        wallet,\n        readyToTransact,\n        signer,\n        provider,\n        monitorTx,\n      }}\n    >\n      {props.children}\n    </Web3Context.Provider>\n  );\n};\n\nexport { Web3Provider };\n\nexport default Web3Context;\n","import { ethers } from \"ethers\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport IERC20 from \"./IERC20.json\";\n\nexport async function getTokenBalances(signer: any) {\n  const walletAddress = await signer.getAddress();\n\n  const lp = new ethers.Contract(\n    \"0xCD6bcca48069f8588780dFA274960F15685aEe0e\",\n    IERC20.abi,\n    signer\n  ).balanceOf(walletAddress);\n\n  const token = new ethers.Contract(\n    \"0x88ACDd2a6425c3FaAE4Bc9650Fd7E27e0Bebb7aB\",\n    IERC20.abi,\n    signer\n  ).balanceOf(walletAddress);\n\n  return {\n    alchemist: formatUnits(await token),\n    lp: formatUnits(await lp),\n  };\n}\n","import { createHash } from \"crypto\";\n\nexport const toMaxDecimalsFloor = (n: number | string, step: number) => {\n  const amount = typeof n === \"string\" ? Number(n.replace(\",\", \".\")) : n;\n  //let factor = Number('1e' + decimals)\n  let nRound = Math.floor(amount * step) / step;\n  return !isFinite(nRound) ? 0 : nRound;\n};\n\nexport const toMaxDecimalsRound = (n: number | string, step: number) => {\n  const amount = typeof n === \"string\" ? Number(n.replace(\",\", \".\")) : n;\n  if (step <= 0) return amount;\n  //let factor = Number('1e' + decimals)\n  let factor = 1 / step;\n  let nRound = Math.round(amount * factor) / factor;\n  return !isFinite(nRound) ? 0 : nRound;\n};\n\nexport function convertToUint(amount: string, tokenDecimals: number) {\n  let [int, decimals] = amount.split(\".\");\n  decimals = decimals ?? \"\";\n  int = int.replace(/^0+/, \"\");\n  decimals = decimals.padEnd(tokenDecimals, \"0\");\n  if (decimals.length > tokenDecimals) {\n    throw new Error(\"Too many decimals were provided\");\n  }\n  return int + decimals;\n}\n\nexport function addDecimalsToUint(amount: string, tokenDecimals: number) {\n  const padded = amount.padStart(tokenDecimals + 1, \"0\");\n  const decimals = padded.substr(-tokenDecimals).replace(/0+$/, \"\");\n  let int = padded.substr(0, padded.length - tokenDecimals).replace(/^0+/, \"\");\n  if (int === \"\") {\n    int = \"0\";\n  }\n  if (decimals === \"\") {\n    return int;\n  } else {\n    return `${int}.${decimals}`;\n  }\n}\n\nexport function sha256(buffer: Buffer) {\n  return createHash(\"sha256\").update(buffer).digest(\"hex\");\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Web3Context from \"../../Web3Context\";\nimport { getTokenBalances } from \"../../contracts/getTokenBalances\";\nimport { toMaxDecimalsRound } from \"../Widget/utils\";\nimport { Spinner, useColorModeValue } from \"@chakra-ui/react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { Badge, Box, HStack, Text } from \"@chakra-ui/layout\";\n\nexport default function UserAddress() {\n  const [inProp, setInProp] = useState(false);\n  const { signer, provider } = useContext(Web3Context);\n  const [tokenBalance, setTokenBalance] = useState<{\n    alchemist: string;\n    lp: string;\n  }>();\n\n  useEffect(() => {\n    (async () => {\n      if (signer) {\n        const balances = await getTokenBalances(signer);\n        setTokenBalance(balances);\n      }\n    })();\n  }, [signer]);\n\n  useEffect(() => {\n    setInProp(true);\n  }, []);\n\n  const userWalletBgColor = useColorModeValue(\"white\", \"gray.600\");\n  const userWalletTextColor = useColorModeValue(\"gray.500\", \"gray.400\");\n\n  return (\n    <CSSTransition in={inProp} timeout={1000} classNames=\"slideDown\">\n      {provider ? (\n        <Box py={2} px={2} borderRadius=\"lg\" bg={userWalletBgColor} shadow=\"xl\">\n          <HStack>\n            <Text color={userWalletTextColor}>My wallet:</Text>\n            {!tokenBalance && <Spinner />}\n            {tokenBalance && (\n              <Badge px={2} py={1} borderRadius=\"md\" boxShadow=\"sm\">\n                Alchemist: {toMaxDecimalsRound(tokenBalance.alchemist, 0.01)} ⚗️\n              </Badge>\n            )}\n            {tokenBalance && (\n              <Badge px={2} py={1} borderRadius=\"md\" boxShadow=\"sm\">\n                LP: {toMaxDecimalsRound(tokenBalance.lp, 0.01)} ⚗️\n              </Badge>\n            )}\n          </HStack>\n        </Box>\n      ) : (\n        <></>\n      )}\n    </CSSTransition>\n  );\n}\n","import React from \"react\";\n\ntype CancelProps = {\n  fill?: string;\n  width?: string;\n  height?: string;\n  margin: object;\n  handleClick: () => void;\n};\nconst CancelButton = ({\n  fill = \"#000A28\",\n  width = \"16px\",\n  height = \"16px\",\n  margin = {},\n  handleClick,\n}: CancelProps) => (\n  <button\n    onClick={handleClick}\n    style={{\n      border: \"none\",\n      outline: \"none\",\n      ...(Object.keys(margin).length && { ...margin }),\n    }}\n    className=\"reset\"\n  >\n    <svg\n      style={{\n        cursor: \"pointerEvent\",\n        pointerEvents: \"none\",\n      }}\n      width={width}\n      height={height}\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n    >\n      <path\n        d=\"M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z\"\n        fill={fill}\n      />\n    </svg>\n  </button>\n);\n\nexport default CancelButton;\n","import React, { useContext } from \"react\";\nimport Web3Context from \"../../Web3Context\";\nimport { Text, Button, Box, useColorModeValue } from \"@chakra-ui/react\";\nimport { CancelButton } from \"../../components\";\n\nexport default function UserAddress() {\n  const { wallet, address, onboard, readyToTransact } = useContext(Web3Context);\n\n  const handleClick = () => (!wallet.provider ? readyToTransact() : null);\n\n  const buttonBgColor = useColorModeValue(\"white\", \"gray.700\");\n\n  return (\n    <>\n      <Button\n        onClick={handleClick}\n        background={buttonBgColor}\n        variant=\"muted\"\n        boxShadow=\"md\"\n        borderRadius=\"lg\"\n      >\n        <Text fontSize=\"sm\" color=\"gray.500\" mr={2}>\n          {address ? \"Mainnet:\" : \"Connect Wallet\"}\n        </Text>\n        {address && (\n          <>\n            <Text fontSize=\"sm\" mr={4}>\n              {address.substring(0, 6) +\n                \"...\" +\n                address.substring(address.length - 4)}\n            </Text>\n          </>\n        )}\n        <Box\n          background={address ? \"green.400\" : \"gray.400\"}\n          borderRadius=\"100%\"\n          width={3}\n          height={3}\n        />\n        {wallet.provider && (\n          <CancelButton\n            margin={{ marginLeft: \"8px\" }}\n            width=\"14px\"\n            height=\"14px\"\n            handleClick={() => onboard.walletReset()}\n          />\n        )}\n      </Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport UserWallet from \"../UserWallet\";\nimport UserAddress from \"../UserAddress\";\nimport LOGO from \"../../img/alembic.png\";\nimport Web3Context from \"../../Web3Context\";\nimport { Image } from \"@chakra-ui/image\";\nimport { IconButton } from \"@chakra-ui/button\";\nimport { FiSun, FiMoon } from \"react-icons/fi\";\nimport { useColorMode, useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { Box, Flex, LinkBox, LinkOverlay } from \"@chakra-ui/layout\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nconst Header: React.FC = () => {\n  const { wallet, address } = React.useContext(Web3Context);\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const isDarkMode = colorMode === \"dark\";\n  const buttonHoverBgColor = useColorModeValue(\"gray.100\", \"gray.700\");\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" py={4}>\n        {/* Hardcoded 283 for now to center user wallet component */}\n        <LinkBox width={[\"auto\", \"auto\", 283]}>\n          <LinkOverlay href=\"/\">\n            <Image\n              src={LOGO}\n              width={[\"50px\", \"50px\", \"70px\"]}\n              alt=\"alchemist logo\"\n            />\n          </LinkOverlay>\n        </LinkBox>\n        <Box display={[\"none\", \"none\", \"none\", \"block\"]}>\n          {address && <UserWallet />}\n        </Box>\n        <Box>\n          <IconButton\n            mr={2}\n            borderRadius=\"lg\"\n            variant=\"ghost\"\n            onClick={toggleColorMode}\n            icon={isDarkMode ? <FiMoon /> : <FiSun />}\n            aria-label={isDarkMode ? \"Toggle light mode\" : \"Toggle dark mode\"}\n            _hover={{ background: buttonHoverBgColor }}\n          />\n          <UserAddress />\n        </Box>\n      </Flex>\n    </>\n  );\n};\n\nexport default Header;\n","import { TypedDataField } from \"@ethersproject/abstract-signer\";\nimport {\n  BigNumberish,\n  Contract,\n  ContractFactory,\n  Signer,\n  Wallet,\n} from \"ethers\";\nimport { splitSignature } from \"ethers/lib/utils\";\n\nexport const signPermission = async (\n  method: string,\n  vault: Contract,\n  owner: Signer,\n  delegateAddress: string,\n  tokenAddress: string,\n  amount: BigNumberish,\n  vaultNonce: BigNumberish,\n  chainId?: BigNumberish\n) => {\n  // get chainId\n  chainId = chainId || (await vault.provider.getNetwork()).chainId;\n  // craft permission\n  const domain = {\n    name: \"UniversalVault\",\n    version: \"1.0.0\",\n    chainId: chainId,\n    verifyingContract: vault.address,\n  };\n  const types = {} as Record<string, TypedDataField[]>;\n  types[method] = [\n    { name: \"delegate\", type: \"address\" },\n    { name: \"token\", type: \"address\" },\n    { name: \"amount\", type: \"uint256\" },\n    { name: \"nonce\", type: \"uint256\" },\n  ];\n  const value = {\n    delegate: delegateAddress,\n    token: tokenAddress,\n    amount: amount,\n    nonce: vaultNonce,\n  };\n  // sign permission\n  // todo: add fallback if wallet does not support eip 712 rpc\n  const signedPermission = await (owner as any)._signTypedData(\n    domain,\n    types,\n    value\n  );\n  // return\n  return signedPermission;\n};\n\nexport const signPermitEIP2612 = async (\n  owner: Signer,\n  walletAddress: string,\n  token: Contract,\n  spenderAddress: string,\n  value: BigNumberish,\n  deadline: BigNumberish,\n  nonce?: BigNumberish\n) => {\n  // get nonce\n  nonce = nonce || (await token.nonces(walletAddress));\n  // get chainId\n  const chainId = (await token.provider.getNetwork()).chainId;\n  // get domain\n  const domain = {\n    name: \"Uniswap V2\",\n    version: \"1\",\n    chainId: chainId,\n    verifyingContract: token.address,\n  };\n  // get types\n  const types = {} as Record<string, TypedDataField[]>;\n  types[\"Permit\"] = [\n    { name: \"owner\", type: \"address\" },\n    { name: \"spender\", type: \"address\" },\n    { name: \"value\", type: \"uint256\" },\n    { name: \"nonce\", type: \"uint256\" },\n    { name: \"deadline\", type: \"uint256\" },\n  ];\n  // get values\n  const values = {\n    owner: walletAddress,\n    spender: spenderAddress,\n    value: value,\n    nonce: nonce,\n    deadline: deadline,\n  };\n  // sign permission\n  // todo: add fallback if wallet does not support eip 712 rpc\n  const signedPermission = await (owner as any)._signTypedData(\n    domain,\n    types,\n    values\n  );\n  // split signature\n  const sig = splitSignature(signedPermission);\n  // return\n  return [\n    values.owner,\n    values.spender,\n    values.value,\n    values.deadline,\n    sig.v,\n    sig.r,\n    sig.s,\n  ];\n};\n","export default [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"ownerAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"rewardPoolFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"powerSwitchFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"stakingToken\", type: \"address\" },\n      { internalType: \"address\", name: \"rewardToken\", type: \"address\" },\n      {\n        components: [\n          { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardScaling\",\n        name: \"rewardScaling\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"rewardPool\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"powerSwitch\",\n        type: \"address\",\n      },\n    ],\n    name: \"AludelCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AludelFunded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n    ],\n    name: \"BonusTokenRegistered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"previousOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"newOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"OwnershipTransferred\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"vault\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"token\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"RewardClaimed\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"vault\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Staked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"vault\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Unstaked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"factory\",\n        type: \"address\",\n      },\n    ],\n    name: \"VaultFactoryRegistered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"factory\",\n        type: \"address\",\n      },\n    ],\n    name: \"VaultFactoryRemoved\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"BASE_SHARES_PER_WEI\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_REWARD_TOKENS\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MAX_STAKES_PER_VAULT\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"stakeAmount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"stakeDuration\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n      {\n        components: [\n          { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardScaling\",\n        name: \"rewardScaling\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"calculateReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.StakeData[]\",\n        name: \"stakes\",\n        type: \"tuple[]\",\n      },\n      { internalType: \"uint256\", name: \"unstakeAmount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n      {\n        components: [\n          { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardScaling\",\n        name: \"rewardScaling\",\n        type: \"tuple\",\n      },\n    ],\n    name: \"calculateRewardFromStakes\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"lastStakeAmount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"newStakesCount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"reward\", type: \"uint256\" },\n          {\n            internalType: \"uint256\",\n            name: \"newTotalStakeUnits\",\n            type: \"uint256\",\n          },\n        ],\n        internalType: \"struct IAludel.RewardOutput\",\n        name: \"out\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"end\", type: \"uint256\" },\n    ],\n    name: \"calculateStakeUnits\",\n    outputs: [{ internalType: \"uint256\", name: \"stakeUnits\", type: \"uint256\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.StakeData[]\",\n        name: \"stakes\",\n        type: \"tuple[]\",\n      },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"calculateTotalStakeUnits\",\n    outputs: [\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"duration\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"shares\", type: \"uint256\" },\n        ],\n        internalType: \"struct IAludel.RewardSchedule[]\",\n        name: \"rewardSchedules\",\n        type: \"tuple[]\",\n      },\n      { internalType: \"uint256\", name: \"rewardBalance\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"sharesOutstanding\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"calculateUnlockedRewards\",\n    outputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"duration\", type: \"uint256\" },\n    ],\n    name: \"fund\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getAludelData\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"stakingToken\", type: \"address\" },\n          { internalType: \"address\", name: \"rewardToken\", type: \"address\" },\n          { internalType: \"address\", name: \"rewardPool\", type: \"address\" },\n          {\n            components: [\n              { internalType: \"uint256\", name: \"floor\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"ceiling\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"time\", type: \"uint256\" },\n            ],\n            internalType: \"struct IAludel.RewardScaling\",\n            name: \"rewardScaling\",\n            type: \"tuple\",\n          },\n          {\n            internalType: \"uint256\",\n            name: \"rewardSharesOutstanding\",\n            type: \"uint256\",\n          },\n          { internalType: \"uint256\", name: \"totalStake\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"lastUpdate\", type: \"uint256\" },\n          {\n            components: [\n              { internalType: \"uint256\", name: \"duration\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"start\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"shares\", type: \"uint256\" },\n            ],\n            internalType: \"struct IAludel.RewardSchedule[]\",\n            name: \"rewardSchedules\",\n            type: \"tuple[]\",\n          },\n        ],\n        internalType: \"struct IAludel.AludelData\",\n        name: \"aludel\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"getBonusTokenAtIndex\",\n    outputs: [{ internalType: \"address\", name: \"bonusToken\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getBonusTokenSetLength\",\n    outputs: [{ internalType: \"uint256\", name: \"length\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"stakeAmount\", type: \"uint256\" },\n    ],\n    name: \"getCurrentStakeReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentTotalStakeUnits\",\n    outputs: [\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getCurrentUnlockedRewards\",\n    outputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    name: \"getCurrentVaultReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    name: \"getCurrentVaultStakeUnits\",\n    outputs: [{ internalType: \"uint256\", name: \"stakeUnits\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"stakeAmount\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"getFutureStakeReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" }],\n    name: \"getFutureTotalStakeUnits\",\n    outputs: [\n      { internalType: \"uint256\", name: \"totalStakeUnits\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" }],\n    name: \"getFutureUnlockedRewards\",\n    outputs: [\n      { internalType: \"uint256\", name: \"unlockedRewards\", type: \"uint256\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"getFutureVaultReward\",\n    outputs: [{ internalType: \"uint256\", name: \"reward\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n    ],\n    name: \"getFutureVaultStakeUnits\",\n    outputs: [{ internalType: \"uint256\", name: \"stakeUnits\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPowerController\",\n    outputs: [{ internalType: \"address\", name: \"controller\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getPowerSwitch\",\n    outputs: [\n      { internalType: \"address\", name: \"powerSwitch\", type: \"address\" },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    name: \"getVaultData\",\n    outputs: [\n      {\n        components: [\n          { internalType: \"uint256\", name: \"totalStake\", type: \"uint256\" },\n          {\n            components: [\n              { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n              { internalType: \"uint256\", name: \"timestamp\", type: \"uint256\" },\n            ],\n            internalType: \"struct IAludel.StakeData[]\",\n            name: \"stakes\",\n            type: \"tuple[]\",\n          },\n        ],\n        internalType: \"struct IAludel.VaultData\",\n        name: \"vaultData\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"getVaultFactoryAtIndex\",\n    outputs: [{ internalType: \"address\", name: \"factory\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getVaultFactorySetLength\",\n    outputs: [{ internalType: \"uint256\", name: \"length\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isOffline\",\n    outputs: [{ internalType: \"bool\", name: \"status\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isOnline\",\n    outputs: [{ internalType: \"bool\", name: \"status\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isShutdown\",\n    outputs: [{ internalType: \"bool\", name: \"status\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"target\", type: \"address\" }],\n    name: \"isValidAddress\",\n    outputs: [{ internalType: \"bool\", name: \"validity\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"target\", type: \"address\" }],\n    name: \"isValidVault\",\n    outputs: [{ internalType: \"bool\", name: \"validity\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"owner\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"rageQuit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"bonusToken\", type: \"address\" }],\n    name: \"registerBonusToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"factory\", type: \"address\" }],\n    name: \"registerVaultFactory\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"factory\", type: \"address\" }],\n    name: \"removeVaultFactory\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"renounceOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"token\", type: \"address\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n    ],\n    name: \"rescueTokensFromRewardPool\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"stake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newOwner\", type: \"address\" }],\n    name: \"transferOwnership\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      { internalType: \"address\", name: \"recipient\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"unstakeAndClaim\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","export default [\n  {\n    inputs: [{ internalType: \"address\", name: \"template\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      { indexed: false, internalType: \"bool\", name: \"approved\", type: \"bool\" },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"instance\",\n        type: \"address\",\n      },\n    ],\n    name: \"InstanceAdded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"instance\",\n        type: \"address\",\n      },\n    ],\n    name: \"InstanceRemoved\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"address\", name: \"from\", type: \"address\" },\n      { indexed: true, internalType: \"address\", name: \"to\", type: \"address\" },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"baseURI\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"\", type: \"bytes\" }],\n    name: \"create\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"create\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" }],\n    name: \"create2\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"bytes\", name: \"\", type: \"bytes\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n    ],\n    name: \"create2\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"getApproved\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"getTemplate\",\n    outputs: [{ internalType: \"address\", name: \"template\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"instanceAt\",\n    outputs: [{ internalType: \"address\", name: \"instance\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"instanceCount\",\n    outputs: [{ internalType: \"uint256\", name: \"count\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"instance\", type: \"address\" }],\n    name: \"isInstance\",\n    outputs: [{ internalType: \"bool\", name: \"validity\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"ownerOf\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"_data\", type: \"bytes\" },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"operator\", type: \"address\" },\n      { internalType: \"bool\", name: \"approved\", type: \"bool\" },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes4\", name: \"interfaceId\", type: \"bytes4\" }],\n    name: \"supportsInterface\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"index\", type: \"uint256\" }],\n    name: \"tokenByIndex\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"owner\", type: \"address\" },\n      { internalType: \"uint256\", name: \"index\", type: \"uint256\" },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" }],\n    name: \"tokenURI\",\n    outputs: [{ internalType: \"string\", name: \"\", type: \"string\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"from\", type: \"address\" },\n      { internalType: \"address\", name: \"to\", type: \"address\" },\n      { internalType: \"uint256\", name: \"tokenId\", type: \"uint256\" },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","export default [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"aludel\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleOwner\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"mintCrucibleAndStake\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"aludel\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleFactory\", type: \"address\" },\n      { internalType: \"address\", name: \"crucibleOwner\", type: \"address\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n      {\n        components: [\n          { internalType: \"address\", name: \"owner\", type: \"address\" },\n          { internalType: \"address\", name: \"spender\", type: \"address\" },\n          { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n          { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n          { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n          { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n        ],\n        internalType: \"struct TransmuterV1.Permit\",\n        name: \"permit\",\n        type: \"tuple\",\n      },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"mintCruciblePermitAndStake\",\n    outputs: [{ internalType: \"address\", name: \"vault\", type: \"address\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"address\", name: \"\", type: \"address\" },\n      { internalType: \"uint256\", name: \"\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"\", type: \"bytes\" },\n    ],\n    name: \"onERC721Received\",\n    outputs: [{ internalType: \"bytes4\", name: \"\", type: \"bytes4\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"aludel\", type: \"address\" },\n      { internalType: \"address\", name: \"vault\", type: \"address\" },\n      {\n        components: [\n          { internalType: \"address\", name: \"owner\", type: \"address\" },\n          { internalType: \"address\", name: \"spender\", type: \"address\" },\n          { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n          { internalType: \"uint256\", name: \"deadline\", type: \"uint256\" },\n          { internalType: \"uint8\", name: \"v\", type: \"uint8\" },\n          { internalType: \"bytes32\", name: \"r\", type: \"bytes32\" },\n          { internalType: \"bytes32\", name: \"s\", type: \"bytes32\" },\n        ],\n        internalType: \"struct TransmuterV1.Permit\",\n        name: \"permit\",\n        type: \"tuple\",\n      },\n      { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n    ],\n    name: \"permitAndStake\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"master\", type: \"address\" },\n      { internalType: \"bytes32\", name: \"salt\", type: \"bytes32\" },\n      { internalType: \"address\", name: \"deployer\", type: \"address\" },\n    ],\n    name: \"predictDeterministicAddress\",\n    outputs: [{ internalType: \"address\", name: \"instance\", type: \"address\" }],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"aludel\", type: \"address\" },\n          { internalType: \"address\", name: \"vault\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n        ],\n        internalType: \"struct TransmuterV1.StakeRequest[]\",\n        name: \"requests\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"stakeMulti\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        components: [\n          { internalType: \"address\", name: \"aludel\", type: \"address\" },\n          { internalType: \"address\", name: \"vault\", type: \"address\" },\n          { internalType: \"address\", name: \"recipient\", type: \"address\" },\n          { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n          { internalType: \"bytes\", name: \"permission\", type: \"bytes\" },\n        ],\n        internalType: \"struct TransmuterV1.UnstakeRequest[]\",\n        name: \"requests\",\n        type: \"tuple[]\",\n      },\n    ],\n    name: \"unstakeMulti\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import IUniswapV2ERC20 from \"@uniswap/v2-core/build/IUniswapV2ERC20.json\";\nimport { ethers } from \"ethers\";\nimport { formatEther, parseUnits, randomBytes } from \"ethers/lib/utils\";\nimport { signPermission, signPermitEIP2612 } from \"./utils\";\nimport aludelAbi from \"./aludelAbi\";\nimport crucibleFactoryAbi from \"./crucibleFactoryAbi\";\nimport transmuterAbi from \"./transmuterAbi\";\nimport Crucible from \"./Crucible.json\";\n\nexport async function mintAndLock(\n  signer: any,\n  provider: any,\n  rawAmount: string\n): Promise<string> {\n  const args = {\n    aludel: \"0xf0D415189949d913264A454F57f4279ad66cB24d\",\n    crucibleFactory: \"0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56\",\n    transmuter: \"0xB772ce9f14FC7C7db0D4525aDb9349FBD7ce456a\",\n    amount: rawAmount,\n  };\n  const walletAddress = await signer.getAddress();\n  // fetch contracts\n\n  const aludel = new ethers.Contract(args.aludel, aludelAbi, signer);\n  //const aludel = await ethers.getContractAt('Aludel', args.aludel, signer)\n  const stakingToken = new ethers.Contract(\n    (await aludel.getAludelData()).stakingToken,\n    IUniswapV2ERC20.abi,\n    signer\n  );\n  const crucibleFactory = new ethers.Contract(\n    args.crucibleFactory,\n    crucibleFactoryAbi,\n    signer\n  );\n  const transmuter = new ethers.Contract(\n    args.transmuter,\n    transmuterAbi,\n    signer\n  );\n\n  // declare config\n\n  const amount = parseUnits(args.amount, await stakingToken.decimals());\n  const salt = randomBytes(32);\n  const deadline = (await provider.getBlock(\"latest\")).timestamp + 60 * 60 * 24;\n\n  // validate balances\n  if ((await stakingToken.balanceOf(walletAddress)) < amount) {\n    throw new Error(\"Not enough balance\");\n  }\n\n  // craft permission\n\n  const crucible = new ethers.Contract(\n    await transmuter.predictDeterministicAddress(\n      await crucibleFactory.getTemplate(),\n      salt,\n      crucibleFactory.address\n    ),\n    Crucible.abi,\n    signer\n  );\n\n  console.log(\"Sign Permit\");\n\n  const permit = await signPermitEIP2612(\n    signer,\n    walletAddress,\n    stakingToken,\n    transmuter.address,\n    amount,\n    deadline\n  );\n\n  console.log(\"Sign Lock\");\n\n  const permission = await signPermission(\n    \"Lock\",\n    crucible,\n    signer,\n    aludel.address,\n    stakingToken.address,\n    amount,\n    0\n  );\n\n  console.log(\"Mint, Deposit, Stake\");\n  try {\n    const tx = await transmuter.mintCruciblePermitAndStake(\n      aludel.address,\n      crucibleFactory.address,\n      walletAddress,\n      salt,\n      permit,\n      permission\n    );\n    console.log(\"  in\", tx.hash);\n    return tx.hash;\n  } catch (e) {\n    alert(e);\n    throw e;\n  }\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Web3Context from \"../../../../../Web3Context\";\nimport { toMaxDecimalsRound } from \"../../../utils\";\nimport { mintAndLock } from \"../../../../../contracts/alchemist\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { Alert } from \"@chakra-ui/alert\";\nimport { Button, IconButton } from \"@chakra-ui/button\";\nimport { Link, Text } from \"@chakra-ui/layout\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { getTokenBalances } from \"../../../../../contracts/getTokenBalances\";\nimport {\n  Popover,\n  PopoverArrow,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@chakra-ui/popover\";\nimport { FiInfo } from \"react-icons/fi\";\n\ninterface OperatePaneProps {\n  handleInputChange?: (form: { [key: string]: string | number }) => void;\n  isConnected: boolean;\n}\n\nconst OperatePane: React.FC<OperatePaneProps> = (props) => {\n  const { handleInputChange = () => null, isConnected } = props;\n\n  // Todo: type the extended web3context\n  const { signer, provider, readyToTransact, monitorTx } = useContext(\n    Web3Context\n  );\n\n  const [lpBalance, setLpBalance] = useState(\"\");\n\n  const onChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    //setXAmount is the amount displayed in the input, should be string\n    const name = ev.target.name;\n    let value = ev.target.value;\n    if (ev.target.type === \"number\")\n      value =\n        ev.target.value === \"\"\n          ? ev.target.value\n          : toMaxDecimalsRound(ev.target.value, +ev.target.step).toString();\n\n    setLpBalance(value);\n  };\n\n  useEffect(() => {\n    handleInputChange({\n      lpBalance,\n    });\n  }, [lpBalance, handleInputChange]);\n\n  const alertBgColor = useColorModeValue(\"gray.50\", \"gray.600\");\n\n  return (\n    <>\n      <Alert\n        mb={8}\n        status=\"info\"\n        borderWidth={1}\n        borderRadius=\"lg\"\n        borderColor=\"green.300\"\n        background={alertBgColor}\n      >\n        <Text>\n          First you will need to provide liquidity to the{\" \"}\n          <span role=\"img\" aria-label=\"alembic\">\n            ⚗️\n          </span>\n          /ETH pair on Uniswap through{\" \"}\n          <Link\n            isExternal\n            href=\"https://app.uniswap.org/#/add/0x88acdd2a6425c3faae4bc9650fd7e27e0bebb7ab/ETH\"\n          >\n            this\n          </Link>\n          .\n        </Text>\n      </Alert>\n\n      <FormControl mb={4}>\n        <FormLabel>\n          LP Balance\n          <Popover placement=\"right-start\">\n            <PopoverTrigger>\n              <IconButton\n                aria-label=\"info\"\n                variant=\"ghost\"\n                icon={<FiInfo />}\n                _hover={{ background: \"transparent\", color: \"green.300\" }}\n                _focus={{ border: \"none\" }}\n              />\n            </PopoverTrigger>\n            <PopoverContent _focus={{ outline: \"none\" }}>\n              <PopoverArrow />\n              <PopoverBody>How many LP tokens you want to stake.</PopoverBody>\n            </PopoverContent>\n          </Popover>\n        </FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            size=\"lg\"\n            variant=\"filled\"\n            _focus={{ borderColor: \"green.300\" }}\n            value={lpBalance}\n            onChange={onChange}\n            name=\"lpBalance\"\n            placeholder=\"0.0\"\n            type=\"number\"\n          />\n          <InputRightElement width=\"4.5rem\" zIndex={0}>\n            <Button\n              mr={2}\n              mt={2}\n              h=\"2rem\"\n              variant=\"ghost\"\n              onClick={() =>\n                getTokenBalances(signer).then(({ lp }) => setLpBalance(lp))\n              }\n            >\n              Max\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      {/* Todo: Make this button reusable, repeated styles */}\n      {isConnected ? (\n        <Button\n          size=\"lg\"\n          isFullWidth\n          color=\"white\"\n          background=\"green.300\"\n          _focus={{ boxShadow: \"none\" }}\n          _hover={{ background: \"green.400\" }}\n          onClick={async () => {\n            await readyToTransact();\n            const hash: string = await mintAndLock(signer, provider, lpBalance);\n            monitorTx(hash);\n          }}\n        >\n          Stake\n        </Button>\n      ) : (\n        <Button\n          size=\"lg\"\n          isFullWidth\n          color=\"white\"\n          background=\"green.300\"\n          _focus={{ boxShadow: \"none\" }}\n          _hover={{ background: \"green.400\" }}\n          onClick={() => readyToTransact()}\n        >\n          Connect Wallet\n        </Button>\n      )}\n      <Text color=\"gray.500\" mt={4} px={2}>\n        Ledger wallets on Metamask don't support the signature types required,\n        so they won't work. See{\" \"}\n        <Link\n          color=\"green.300\"\n          href=\"https://github.com/MetaMask/metamask-extension/issues/10240\"\n          isExternal\n        >\n          the github issue\n        </Link>{\" \"}\n        for more info.\n      </Text>\n    </>\n  );\n};\n\nexport default OperatePane;\n","import React, { useState, useContext } from \"react\";\nimport OperatePane from \"./OperatePane\";\nimport Web3Context from \"../../../../../Web3Context\";\nimport { convertToUint } from \"../../../utils\";\nimport BN from \"bn.js\";\n\nconst Operate: React.FC = () => {\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const { wallet } = useContext(Web3Context);\n\n  if (!!errorMsg) {\n    return <span>{errorMsg}</span>;\n  } else {\n    return (\n      <OperatePane\n        handleInputChange={(form) => {}}\n        isConnected={!!wallet.provider}\n      />\n    );\n  }\n};\n\nexport default Operate;\n","import { ethers } from \"ethers\";\nimport { formatUnits } from \"ethers/lib/utils\";\nimport crucibleFactoryAbi from \"./crucibleFactoryAbi\";\nimport Crucible from \"./Crucible.json\";\nimport IERC20 from \"./IERC20.json\";\n\nexport async function getOwnedCrucibles(signer: any, provider: any) {\n  const crucibleFactoryAddress = \"0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56\";\n  const walletAddress = await signer.getAddress();\n\n  const token = new ethers.Contract(\n    \"0xCD6bcca48069f8588780dFA274960F15685aEe0e\",\n    IERC20.abi,\n    signer\n  );\n  const crucibleFactory = new ethers.Contract(\n    crucibleFactoryAddress,\n    crucibleFactoryAbi,\n    signer\n  );\n  const filter = crucibleFactory.filters.Transfer(null, walletAddress);\n  const crucibleEvents = await crucibleFactory.queryFilter(filter, 0, \"latest\");\n  const crucibles = crucibleEvents.map(async (data) => {\n    const id = (data.args!.tokenId as ethers.BigNumber).toHexString();\n    const crucible = new ethers.Contract(id, Crucible.abi, signer);\n    const owner = crucibleFactory.ownerOf(id);\n    const balance = token.balanceOf(crucible.address).then(formatUnits);\n    const lockedBalance = crucible\n      .getBalanceLocked(\"0xCD6bcca48069f8588780dFA274960F15685aEe0e\") // LP token\n      .then(formatUnits);\n    return {\n      id,\n      balance: await balance,\n      lockedBalance: await lockedBalance,\n      owner: await owner\n    };\n  });\n  return (await Promise.all(crucibles)).filter((crucible, index, resolvedCrucibles)=>\n  crucible.owner===walletAddress\n  && resolvedCrucibles.slice(0, index).find(c=>c.id===crucible.id) === undefined);\n}\n","import IUniswapV2ERC20 from \"@uniswap/v2-core/build/IUniswapV2ERC20.json\";\nimport { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport { signPermission } from \"./utils\";\nimport aludelAbi from \"./aludelAbi\";\nimport Crucible from \"./Crucible.json\";\n\nexport async function unstakeAndClaim(\n  signer: any,\n  monitorTx: (hash: string) => Promise<any>,\n  crucibleAddress: string,\n  rawAmount: string\n) {\n  const walletAddress = await signer.getAddress();\n\n  const args = {\n    crucible: crucibleAddress,\n    aludel: \"0xf0D415189949d913264A454F57f4279ad66cB24d\",\n    recipient: walletAddress,\n    amount: rawAmount,\n  };\n\n  // fetch contracts\n\n  const aludel = new ethers.Contract(args.aludel, aludelAbi, signer);\n  const stakingToken = new ethers.Contract(\n    (await aludel.getAludelData()).stakingToken,\n    IUniswapV2ERC20.abi,\n    signer\n  );\n  const crucible = new ethers.Contract(args.crucible, Crucible.abi, signer);\n  // declare config\n\n  const amount = parseUnits(args.amount, await stakingToken.decimals());\n  const nonce = await crucible.getNonce();\n  const recipient = args.recipient;\n\n  // validate balances\n\n  if ((await stakingToken.balanceOf(crucible.address)) < amount) {\n    throw new Error(\"stop being poor\");\n  }\n\n  // craft permission\n\n  console.log(\"Sign Unlock permission\");\n\n  const permission = await signPermission(\n    \"Unlock\",\n    crucible,\n    signer,\n    aludel.address,\n    stakingToken.address,\n    amount,\n    nonce\n  );\n\n  console.log(\"Unstake and Claim\");\n\n  const populatedTx = await aludel.populateTransaction.unstakeAndClaim(\n    crucible.address,\n    recipient,\n    amount,\n    permission\n  );\n\n  const unstakeTx = await signer.sendTransaction(populatedTx);\n  monitorTx(unstakeTx.hash);\n  console.log(\"  in\", unstakeTx.hash);\n\n  console.log(\"Withdraw from crucible\");\n\n  const withdrawTx = await crucible.transferERC20(\n    stakingToken.address,\n    recipient,\n    amount\n  );\n\n  monitorTx(withdrawTx.hash);\n\n  console.log(\"  in\", withdrawTx?.hash);\n}\n","import { ethers } from \"ethers\";\nimport crucibleFactoryAbi from \"./crucibleFactoryAbi\";\n\nexport async function sendNFT(signer: any, id: string, to: string) {\n  const crucibleFactoryAddress = \"0x54e0395CFB4f39beF66DBCd5bD93Cca4E9273D56\";\n  const walletAddress = await signer.getAddress();\n\n  const crucibleFactory = new ethers.Contract(\n    crucibleFactoryAddress,\n    crucibleFactoryAbi,\n    signer\n  );\n\n  await crucibleFactory[\"safeTransferFrom(address,address,uint256)\"](\n    walletAddress,\n    to,\n    ethers.BigNumber.from(id)\n  );\n}\n","import { ethers } from \"ethers\";\nimport { parseUnits } from \"ethers/lib/utils\";\nimport Crucible from \"./Crucible.json\";\nimport IERC20 from \"./IERC20.json\";\n\nexport async function withdraw(crucibleAddress: string, rawAmount: string) {\n  const provider = new ethers.providers.Web3Provider((window as any).ethereum);\n  const signer = provider.getSigner();\n\n  const walletAddress = await signer.getAddress();\n\n  const args = {\n    crucible: crucibleAddress,\n    token: \"0xCD6bcca48069f8588780dFA274960F15685aEe0e\",\n    recipient: walletAddress,\n    amount: rawAmount,\n  };\n\n  // fetch contracts\n\n  const token = new ethers.Contract(args.token, IERC20.abi, signer);\n  const crucible = new ethers.Contract(args.crucible, Crucible.abi, signer);\n\n  // declare config\n\n  const amount = parseUnits(args.amount, 18);\n  const recipient = args.recipient;\n\n  // validate balances\n\n  const balance = await token.balanceOf(crucible.address);\n  const lock = await crucible.getBalanceLocked(token.address);\n  if (balance.sub(lock) < amount) {\n    throw new Error(\"ser unlock pls\");\n  }\n\n  console.log(\"Withdraw from crucible\");\n\n  const withdrawTx = await crucible.transferERC20(\n    token.address,\n    recipient,\n    amount\n  );\n\n  console.log(\"  in\", withdrawTx.hash);\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { toMaxDecimalsRound } from \"../../../utils\";\nimport Web3Context from \"../../../../../Web3Context\";\nimport { getOwnedCrucibles } from \"../../../../../contracts/getOwnedCrucibles\";\nimport { unstakeAndClaim } from \"../../../../../contracts/unstakeAndClaim\";\nimport { sendNFT } from \"../../../../../contracts/sendNFT\";\nimport { withdraw } from \"../../../../../contracts/withdraw\";\nimport { Button, ButtonGroup } from \"@chakra-ui/button\";\nimport { Badge, Box, Flex, HStack, Text } from \"@chakra-ui/layout\";\nimport { FaLock } from \"react-icons/fa\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/modal\";\nimport { Input } from \"@chakra-ui/input\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\ninterface OperatePaneProps {\n  handleInputChange?: (form: { [key: string]: string | number }) => void;\n  isConnected: boolean;\n}\n\nconst OperatePane: React.FC<OperatePaneProps> = (props) => {\n  const { handleInputChange = () => null, isConnected } = props;\n\n  const { readyToTransact, signer, provider, monitorTx } = useContext(\n    Web3Context\n  );\n\n  const [amount2Withdraw, setAmount2Withdraw] = useState(\"\");\n  const [sendAddress, setSendAddress] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [modalOperation, setModalOperation] = useState<\n    \"withdraw\" | \"unstake\" | \"send\"\n  >(\"unstake\");\n  const [selectedCrucible, setSelectedCrucible] = useState(\"\");\n\n  const [formValues, setFormValues] = useState({\n    lnBalance: \"\",\n    tbtcBalance: \"\",\n    linearFee: \"\",\n    constantFee: \"\",\n    nodeAddress: \"\",\n  });\n\n  const [crucibles, setCrucibles] = useState(\n    [] as {\n      id: string;\n      balance: string;\n      lockedBalance: string;\n    }[]\n  );\n  useEffect(() => {\n    if (signer) {\n      getOwnedCrucibles(signer, provider).then(setCrucibles);\n    }\n  }, [isConnected, provider, signer]);\n\n  const onChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    //setXAmount is the amount displayed in the input, should be string\n    const name = ev.target.name;\n    let value = ev.target.value;\n    if (ev.target.type === \"number\")\n      value =\n        ev.target.value === \"\"\n          ? ev.target.value\n          : toMaxDecimalsRound(ev.target.value, +ev.target.step).toString();\n\n    setFormValues((old) => {\n      return {\n        ...old,\n        [name]: value,\n      };\n    });\n  };\n\n  useEffect(() => {\n    handleInputChange(formValues);\n  }, [formValues, handleInputChange]);\n\n  //todo\n  const formatAmount2Withdraw = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    let amount = ev.target.value;\n\n    setAmount2Withdraw(amount);\n  };\n\n  //todo\n  const unstake = async () => {\n    await unstakeAndClaim(signer, monitorTx, selectedCrucible, amount2Withdraw);\n    setModalIsOpen(false);\n  };\n  const withdrawTokens = async () => {\n    await withdraw(selectedCrucible, amount2Withdraw);\n    setModalIsOpen(false);\n  };\n\n  const cruciblesCardBg = useColorModeValue(\"white\", \"gray.600\");\n\n  const sendModal = (\n    <Modal isOpen onClose={() => setModalIsOpen(false)}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Send</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <FormControl mb={4}>\n            <FormLabel>Address</FormLabel>\n            <Input\n              size=\"lg\"\n              variant=\"filled\"\n              _focus={{ borderColor: \"green.300\" }}\n              value={sendAddress}\n              onChange={(ev) => setSendAddress(ev.target.value)}\n              name=\"address\"\n              type=\"string\"\n            />\n          </FormControl>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button\n            bg=\"green.300\"\n            color=\"white\"\n            mr={3}\n            onClick={async () => {\n              await sendNFT(signer, selectedCrucible, sendAddress);\n              setModalIsOpen(false);\n            }}\n          >\n            Send\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n\n  // Todo: Add empty state\n  return (\n    <>\n      {modalIsOpen &&\n        (modalOperation === \"send\" ? (\n          sendModal\n        ) : (\n          <Modal isOpen onClose={() => setModalIsOpen(false)}>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalHeader>\n                {modalOperation === \"withdraw\" ? \"Withdraw\" : \"Unstake\"}\n              </ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                {modalOperation === \"unstake\"? \"WARNING: THERE'S A BUG CURRENTLY BEING FIXED THAT CAN LEAD TO LOSS OF REWARDS IF YOU UNSTAKE NOW, ONLY UNSTAKE IF YOU ARE OKAY WITH LOOSING ALL REWARDS\": \"\"}\n                <FormControl mb={4}>\n                  <FormLabel>Amount</FormLabel>\n                  <Input\n                    size=\"lg\"\n                    variant=\"filled\"\n                    _focus={{ borderColor: \"green.300\" }}\n                    value={amount2Withdraw}\n                    onChange={formatAmount2Withdraw}\n                    name=\"balance\"\n                    placeholder=\"0.0\"\n                    type=\"number\"\n                  />\n                </FormControl>\n              </ModalBody>\n\n              <ModalFooter>\n                <Button\n                  bg=\"green.300\"\n                  color=\"white\"\n                  mr={3}\n                  onClick={\n                    modalOperation === \"withdraw\"\n                      ? withdrawTokens\n                      : unstake\n                  }\n                >\n                  {modalOperation === \"withdraw\" ? \"Withdraw\" : \"Unstake\"}\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n        ))}\n\n      {crucibles.map((crucible) => {\n        return (\n          <Box\n            p={4}\n            mb={6}\n            bg={cruciblesCardBg}\n            boxShadow=\"md\"\n            borderWidth={1}\n            borderRadius=\"lg\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            flexDirection={\"column\"}\n          >\n            <Box mb={4}>\n              <Text\n                as=\"div\"\n                fontSize=\"lg\"\n                textAlign={[\"center\", \"center\", \"left\"]}\n              >\n                <Flex justifyContent=\"space-between\">\n                  <HStack>\n                    <Box mr={2}>\n                      <strong>Balance:</strong> {`${crucible[\"balance\"]}`}\n                    </Box>\n                    <Badge py={1} px={2} borderRadius=\"xl\" fonSize=\"2em\">\n                      <HStack>\n                        <Box>{crucible[\"lockedBalance\"]}</Box>\n                        <FaLock />\n                      </HStack>\n                    </Badge>\n                  </HStack>\n                  <Box fontSize=\"sm\" color=\"gray.400\">\n                    ID: {crucible[\"id\"]}\n                  </Box>\n                </Flex>\n              </Text>\n            </Box>\n            <ButtonGroup\n              isAttached\n              variant=\"outline\"\n              mb={[4, 4, 0]}\n              width=\"100%\"\n            >\n              <Button\n                isFullWidth\n                color=\"white\"\n                borderWidth={1}\n                borderColor={cruciblesCardBg}\n                background=\"green.300\"\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ background: \"green.400\" }}\n                onClick={() => {\n                  setModalOperation(\"unstake\");\n                  setSelectedCrucible(crucible[\"id\"]);\n                  setModalIsOpen(true);\n                }}\n              >\n                Unstake\n              </Button>\n              <Button\n                isFullWidth\n                color=\"white\"\n                borderWidth={1}\n                borderColor={cruciblesCardBg}\n                background=\"green.300\"\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ background: \"green.400\" }}\n                onClick={() => {\n                  setModalOperation(\"withdraw\");\n                  setSelectedCrucible(crucible[\"id\"]);\n                  setModalIsOpen(true);\n                }}\n              >\n                Withdraw\n              </Button>\n              <Button\n                isFullWidth\n                color=\"white\"\n                borderWidth={1}\n                borderColor={cruciblesCardBg}\n                background=\"green.300\"\n                _focus={{ boxShadow: \"none\" }}\n                _hover={{ background: \"green.400\" }}\n                onClick={() => {\n                  setModalOperation(\"send\");\n                  setSelectedCrucible(crucible[\"id\"]);\n                  setModalIsOpen(true);\n                }}\n              >\n                Send\n              </Button>\n            </ButtonGroup>\n          </Box>\n        );\n      })}\n      {isConnected ? (\n        <></>\n      ) : (\n        <Button\n          size=\"lg\"\n          isFullWidth\n          color=\"white\"\n          background=\"green.300\"\n          _focus={{ boxShadow: \"none\" }}\n          _hover={{ background: \"green.400\" }}\n          onClick={() => readyToTransact()}\n        >\n          Connect Wallet\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default OperatePane;\n","import React, { useState, useContext } from \"react\";\nimport OperatePane from \"./OperatePane\";\nimport Web3Context from \"../../../../../Web3Context\";\n\nconst Operate: React.FC = () => {\n  const [errorMsg, setErrorMsg] = useState<string>();\n  const { wallet, address } = useContext(Web3Context);\n\n  if (!!errorMsg) {\n    return <span>{errorMsg}</span>;\n  } else {\n    return (\n      <OperatePane\n        handleInputChange={(form) => {}}\n        isConnected={!!wallet.provider}\n      />\n    );\n  }\n};\n\nexport default Operate;\n","import React from \"react\";\nimport { Box, Center } from \"@chakra-ui/layout\";\nimport { SwapPane, OperatePane } from \"./TabContent/Panes\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from \"@chakra-ui/tabs\";\n\ninterface WidgetProps {}\n\nconst Widget: React.FC<WidgetProps> = () => {\n  const cardBgColor = useColorModeValue(\"white\", \"gray.700\");\n  const tabsBgColor = useColorModeValue(\"gray.50\", \"gray.600\");\n\n  return (\n    <Center>\n      <Box\n        shadow=\"xl\"\n        borderRadius=\"2xl\"\n        bg={cardBgColor}\n        borderWidth={1}\n        width={[\"100%\", 540, 540]}\n      >\n        <Tabs isFitted>\n          <TabList\n            px={8}\n            height=\"70px\"\n            bg={tabsBgColor}\n            borderTopLeftRadius=\"2xl\"\n            borderTopRightRadius=\"2xl\"\n          >\n            <Tab\n              fontSize=\"xl\"\n              fontWeight={500}\n              _selected={{\n                color: \"inherit\",\n                borderColor: \"green.300\",\n                borderBottomWidth: 3,\n              }}\n            >\n              Mint\n            </Tab>\n            <Tab\n              fontSize=\"xl\"\n              fontWeight={500}\n              _selected={{\n                color: \"inherit\",\n                borderColor: \"green.300\",\n                borderBottomWidth: 3,\n              }}\n            >\n              Crucibles\n            </Tab>\n          </TabList>\n\n          <TabPanels p={4} overflowY=\"auto\" maxH=\"480px\">\n            <TabPanel>\n              <SwapPane />\n            </TabPanel>\n            <TabPanel>\n              <OperatePane />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Center>\n  );\n};\n\nexport default Widget;\n","import Widget from \"../Widget\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Heading, Text } from \"@chakra-ui/layout\";\nimport { CSSTransition } from \"react-transition-group\";\n\nconst Body: React.FC = () => {\n  const [inProp, setInProp] = useState(false);\n\n  useEffect(() => {\n    setInProp(true);\n  }, []);\n\n  return (\n    <Box textAlign=\"center\" mt={[8, 16, 24]}>\n      <Heading size=\"lg\" mb={2}>\n        Alchemist\n      </Heading>\n      <Text fontSize=\"lg\" color=\"gray.500\" mb={16}>\n        The only plan is there is no plan{\" \"}\n        <span role=\"img\" aria-label=\"alchemist logo\">\n          ⚗️\n        </span>\n      </Text>\n      <CSSTransition in={inProp} timeout={1000} classNames=\"slideUp\">\n        <Widget />\n      </CSSTransition>\n    </Box>\n  );\n};\n\nexport default Body;\n","import { Box, Flex } from \"@chakra-ui/layout\";\nimport Footer from \"../views/Footer\";\nimport Header from \"../views/Header\";\nimport Body from \"../views/Body\";\nimport React from \"react\";\nimport { useColorModeValue } from \"@chakra-ui/color-mode\";\n\ninterface LayoutProps {}\n\nconst Layout: React.FC<LayoutProps> = () => {\n  const bgColor = useColorModeValue(\"gray.50\", \"gray.800\");\n\n  return (\n    <Flex\n      minHeight=\"100vh\"\n      flexDirection=\"column\"\n      backgroundColor={bgColor}\n      px={[4, 4, 12]}\n    >\n      <Header />\n      <Box flexGrow={1}>\n        <Body />\n      </Box>\n      <Footer />\n    </Flex>\n  );\n};\nexport default Layout;\n","import { extendTheme, ThemeConfig, theme } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n};\n\nconst customTheme = extendTheme({\n  config,\n  colors: {\n    green: {\n      50: \"#defef5\",\n      100: \"#b8f3e5\",\n      200: \"#91ebd3\",\n      300: \"#67e1c1\",\n      400: \"#40d9b0\",\n      500: \"#26bf96\",\n      600: \"#199575\",\n      700: \"#0b6a53\",\n      800: \"#004131\",\n      900: \"#001710\",\n    },\n  },\n  fonts: {\n    heading: \"Work Sans\",\n    body: \"Work Sans\",\n  },\n  components: {\n    Heading: {\n      baseStyle: {\n        fontWeight: \"500\",\n      },\n    },\n    Link: {\n      baseStyle: {\n        _hover: {\n          textDecoration: \"none\",\n          color: \"green.300\",\n        },\n      },\n    },\n    Alert: {\n      baseStyle: {\n        borderRadius: theme.radii[\"2xl\"],\n      },\n    },\n    Input: {\n      baseStyle: {\n        _focus: {\n          borderColor: \"green.300\",\n          borderWidth: \"2px\",\n        },\n      },\n    },\n    Button: {\n      baseStyle: {\n        fontWeight: \"500\",\n      },\n    },\n  },\n});\n\nexport default customTheme;\n","import React from \"react\";\nimport Layout from \"./layouts\";\nimport { Web3Provider } from \"./Web3Context\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { Global, css } from '@emotion/react'\nimport theme from \"./config/theme\";\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n     outline: none;\n     box-shadow: none;\n   }\n`;\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <ChakraProvider theme={theme}>\n        <Web3Provider>\n          <Global styles={GlobalStyles} />\n          <Layout />\n        </Web3Provider>\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/color-mode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport theme from \"./config/theme\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"../src/styles/transitions.css\";\nimport 'focus-visible/dist/focus-visible';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}